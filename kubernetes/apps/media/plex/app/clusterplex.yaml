---
kind: ConfigMap
apiVersion: v1
metadata:
  name: clusterplex-orchestrator-config
  namespace: media
  labels:
    app.kubernetes.io/name: clusterplex-orchestrator-config
    app.kubernetes.io/part-of: clusterplex
data:
  TZ: America/New_York
  LISTENING_PORT: "3500"
  WORKER_SELECTION_STRATEGY: LOAD_TASKS
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: clusterplex-worker-config
  namespace: media
  labels:
    app.kubernetes.io/name: clusterplex-worker-config
    app.kubernetes.io/part-of: clusterplex
data:
  TZ: America/New_York
  PGID: "1000"
  PUID: "1000"
  VERSION: docker
  DOCKER_MODS: "ghcr.io/pabloromeo/clusterplex_worker_dockermod:latest"
  ORCHESTRATOR_URL: "http://clusterplex-orchestrator:3500"
  LISTENING_PORT: "3501"
  STAT_CPU_INTERVAL: "10000"
  EAE_SUPPORT: "1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clusterplex-config-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: clusterplex-config-pvc
    app.kubernetes.io/part-of: clusterplex
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clusterplex-transcode-pvc
  labels:
    app.kubernetes.io/name: clusterplex-transcode-pvc
    app.kubernetes.io/part-of: clusterplex
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clusterplex-orchestrator
  labels:
    app.kubernetes.io/name: clusterplex-orchestrator
    app.kubernetes.io/part-of: clusterplex
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: clusterplex-orchestrator
      app.kubernetes.io/part-of: clusterplex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clusterplex-orchestrator
        app.kubernetes.io/part-of: clusterplex
    spec:
      containers:
        - name: plex
          image: ghcr.io/pabloromeo/clusterplex_orchestrator:latest
          startupProbe:
            httpGet:
              path: /health
              port: 3500
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3500
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3500
            initialDelaySeconds: 5
            timeoutSeconds: 10
          ports:
            - name: orchestrator
              containerPort: 3500
          envFrom:
            - configMapRef:
                name: clusterplex-orchestrator-config
          # resources:
          #   requests:
          #     cpu: 200m
          #     memory: 32Mi
          #   limits:
          #     cpu: 500m
          #     memory: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  name: clusterplex-orchestrator
  labels:
    app.kubernetes.io/name: clusterplex-orchestrator
    app.kubernetes.io/part-of: clusterplex
spec:
  type: ClusterIP
  ports:
    - name: orchestrator
      port: 3500
      protocol: TCP
      targetPort: orchestrator
  selector:
    app.kubernetes.io/name: clusterplex-orchestrator
    app.kubernetes.io/part-of: clusterplex
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clusterplex-worker
  labels:
    app.kubernetes.io/name: clusterplex-worker
    app.kubernetes.io/part-of: clusterplex
spec:
  serviceName: clusterplex-worker-service
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: clusterplex-worker
      app.kubernetes.io/part-of: clusterplex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clusterplex-worker
        app.kubernetes.io/part-of: clusterplex
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: clusterplex-worker
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: plex
                topologyKey: kubernetes.io/hostname
              weight: 50
      containers:
        - name: plex-worker
          image: ghcr.io/linuxserver/plex:1.31.1
          startupProbe:
            httpGet:
              path: /health
              port: 3501
            failureThreshold: 40
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3501
            initialDelaySeconds: 60
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3501
            initialDelaySeconds: 10
            timeoutSeconds: 10
          ports:
            - name: worker
              containerPort: 3501
          envFrom:
            - configMapRef:
                name: clusterplex-worker-config
          volumeMounts:
            - name: data
              mountPath: /mnt/media
            - name: codecs
              mountPath: /codecs
            - name: transcode
              mountPath: /transcode
          resources:
            requests:
              cpu: 12
          #   limits:
          #     cpu: 3000m
          #     memory: 800Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "nfs-media-pvc"
        - name: transcode
          persistentVolumeClaim:
            claimName: "clusterplex-transcode-pvc"
  volumeClaimTemplates:
    - metadata:
        name: codecs
        labels:
          app.kubernetes.io/name: clusterplex-codecs-pvc
          app.kubernetes.io/part-of: clusterplex
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

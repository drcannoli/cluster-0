---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rtorrent-seed
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: rtorrent-flood
      version: 9.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  values:
    podAnnotations:
      configmap.reloader.stakater.com/reload: rtorrent-seed-rtorrent-flood-config
      secret.reloader.stakater.com/reload: wireguard-secret-seed
    image:
      repository: jesec/rtorrent-flood
      tag: latest
    env:
      TZ: America/New_York
      HOME: "/config"
      FLOOD_OPTION_HOST: "0.0.0.0"
      FLOOD_OPTION_PORT: "3000"
      FLOOD_OPTION_RTORRENT: "true"
      FLOOD_OPTION_ALLOWEDPATH: "/mnt/media/Downloads/Seed"
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
        hosts:
          - host: &host "seed.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
      privileged: true
      allowPrivilegeEscalation: true
    persistence:
      config:
        enabled: true
        storageClass: "freenas-iscsi-csi"
        accessMode: ReadWriteOnce
        size: 5Gi
      data:
        enabled: true
        existingClaim: nfs-media-pvc
        mountPath: /mnt/media
    config: |
      session.use_lock.set = no
      method.insert = cfg.basedir,  private|const|string, (cat,(fs.homedir),"/.local/share/rtorrent/")
      method.insert = cfg.download, private|const|string, (cat,"/mnt/media/","Downloads/Seed/")
      method.insert = cfg.logs,     private|const|string, (cat,(cfg.download),"log/")
      method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
      method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
      method.insert = cfg.watch,    private|const|string, (cat,(cfg.download),"watch/")
      # Add new method to get finished dir (called get_finished_dir)
      method.insert = d.get_finished_dir,simple,"cat=(cfg.download),zCompleted/,$d.custom1="
      # Bind event "torrent has finished" to action "move to new directory based on label"
      method.set_key = event.download.finished,move_complete,"d.directory.set=$d.get_finished_dir=;execute=mkdir,-p,$d.get_finished_dir=;execute=mv,$d.base_path=,$d.get_finished_dir="
      fs.mkdir.recursive = (cat,(cfg.basedir))
      fs.mkdir = (cat,(cfg.download))
      fs.mkdir = (cat,(cfg.logs))
      fs.mkdir = (cat,(cfg.session))
      fs.mkdir = (cat,(cfg.watch))
      fs.mkdir = (cat,(cfg.watch),"/load")
      fs.mkdir = (cat,(cfg.watch),"/start")
      schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
      schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))
      dht.add_bootstrap = dht.transmissionbt.com:6881
      dht.add_bootstrap = dht.libtorrent.org:25401
      throttle.max_uploads.set = 100
      throttle.max_uploads.global.set = 250
      throttle.min_peers.normal.set = 20
      throttle.max_peers.normal.set = 60
      throttle.min_peers.seed.set = 30
      throttle.max_peers.seed.set = 80
      trackers.numwant.set = 80
      network.port_range.set = 6881-6881
      network.max_open_files.set = 600
      network.max_open_sockets.set = 300
      pieces.memory.max.set = 1800M
      session.path.set = (cat, (cfg.session))
      directory.default.set = (cat, (cfg.download))
      log.execute = (cat, (cfg.logs), "execute.log")
      encoding.add = utf8
      system.daemon.set = true
      system.umask.set = 0002
      system.cwd.set = (directory.default)
      network.http.max_open.set = 50
      network.http.dns_cache_timeout.set = 25
      network.scgi.open_local = (cat,(cfg.basedir),rtorrent.sock)
      print = (cat, "Logging to ", (cfg.logfile))
      log.open_file = "log", (cfg.logfile)
      log.add_output = "info", "log"
    addons:
      vpn:
        enabled: true
        type: wireguard
        wireguard:
          image:
            repository: ghcr.io/k8s-at-home/wireguard
            tag: v1.0.20210914
            pullPolicy: IfNotPresent
        configFileSecret: wireguard-secret-seed
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
          runAsUser: 568
          runAsGroup: 568
          capabilities:
            add:
              - NET_ADMIN
